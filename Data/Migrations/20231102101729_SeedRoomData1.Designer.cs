// <auto-generated />
using System;
using DataLayer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MorkContext))]
    [Migration("20231102101729_SeedRoomData1")]
    partial class SeedRoomData1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Addresses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Addresses = "123 Main St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1930),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1933),
                            Latitude = 40.712800000000001,
                            Longitude = -74.006
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Addresses = "456 Elm St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1952),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1952),
                            Latitude = 35.689500000000002,
                            Longitude = 139.6917
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Addresses = "789 Oak St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1954),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1955),
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Addresses = "101 Maple St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1957),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1957),
                            Latitude = 52.520000000000003,
                            Longitude = 13.404999999999999
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Addresses = "202 Birch St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1959),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1960),
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            Addresses = "303 Cedar St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1961),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1961),
                            Latitude = 37.774900000000002,
                            Longitude = -122.4194
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            Addresses = "404 Pine St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1964),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1964),
                            Latitude = 34.052199999999999,
                            Longitude = -118.2437
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            Addresses = "505 Spruce St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1978),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1978),
                            Latitude = 41.878100000000003,
                            Longitude = -87.629800000000003
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            Addresses = "606 Redwood St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1980),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1980),
                            Latitude = 51.165700000000001,
                            Longitude = 10.451499999999999
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Addresses = "707 Sequoia St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1982),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1982),
                            Latitude = 35.682839000000001,
                            Longitude = 139.759455
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Addresses = "808 Cedar St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1983),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1984),
                            Latitude = 40.712800000000001,
                            Longitude = -74.006
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Addresses = "909 Pine St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1985),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1985),
                            Latitude = 35.689500000000002,
                            Longitude = 139.6917
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Addresses = "1010 Oak St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1987),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1987),
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            Addresses = "1111 Elm St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1989),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1989),
                            Latitude = 52.520000000000003,
                            Longitude = 13.404999999999999
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            Addresses = "1212 Birch St",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1990),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(1991),
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Campuses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            AddressId = new Guid("11111111-1111-1111-1111-111111111111"),
                            CampusName = "Campus 1",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2136),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2136)
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            AddressId = new Guid("22222222-2222-2222-2222-222222222222"),
                            CampusName = "Campus 2",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2139),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2140)
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            AddressId = new Guid("33333333-3333-3333-3333-333333333333"),
                            CampusName = "Campus 3",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2141),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2142)
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            AddressId = new Guid("44444444-4444-4444-4444-444444444444"),
                            CampusName = "Campus 4",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2144),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2144)
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            AddressId = new Guid("55555555-5555-5555-5555-555555555555"),
                            CampusName = "Campus 5",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2146),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2146)
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            AddressId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CampusName = "Campus 6",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2148),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2148)
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            AddressId = new Guid("77777777-7777-7777-7777-777777777777"),
                            CampusName = "Campus 7",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2150),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2150)
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            AddressId = new Guid("88888888-8888-8888-8888-888888888888"),
                            CampusName = "Campus 8",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2152),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2152)
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            AddressId = new Guid("99999999-9999-9999-9999-999999999999"),
                            CampusName = "Campus 9",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2155),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2155)
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            AddressId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CampusName = "Campus 10",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2157),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2157)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LandLordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("PowerPrice")
                        .HasColumnType("real");

                    b.Property<string>("Village")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("WaterPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CampusId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LandLordId");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            AddressId = new Guid("11111111-1111-1111-1111-111111111111"),
                            CampusId = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2212),
                            HouseName = "House 1",
                            Information = "Information for House 1",
                            LandLordId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2212),
                            PowerPrice = 100f,
                            Village = "Village 1",
                            WaterPrice = 50f
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            AddressId = new Guid("22222222-2222-2222-2222-222222222222"),
                            CampusId = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2218),
                            HouseName = "House 2",
                            Information = "Information for House 2",
                            LandLordId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2219),
                            PowerPrice = 120f,
                            Village = "Village 2",
                            WaterPrice = 55f
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            AddressId = new Guid("33333333-3333-3333-3333-333333333333"),
                            CampusId = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2223),
                            HouseName = "House 3",
                            Information = "Information for House 3",
                            LandLordId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2224),
                            PowerPrice = 90f,
                            Village = "Village 3",
                            WaterPrice = 40f
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            AddressId = new Guid("44444444-4444-4444-4444-444444444444"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2227),
                            HouseName = "House 4",
                            Information = "Information for House 4",
                            LandLordId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2227),
                            PowerPrice = 110f,
                            Village = "Village 4",
                            WaterPrice = 52f
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            AddressId = new Guid("55555555-5555-5555-5555-555555555555"),
                            CampusId = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2231),
                            HouseName = "House 5",
                            Information = "Information for House 5",
                            LandLordId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2231),
                            PowerPrice = 105f,
                            Village = "Village 5",
                            WaterPrice = 48f
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            AddressId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2234),
                            HouseName = "House 6",
                            Information = "Information for House 6",
                            LandLordId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2234),
                            PowerPrice = 95f,
                            Village = "Village 6",
                            WaterPrice = 45f
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            AddressId = new Guid("77777777-7777-7777-7777-777777777777"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2238),
                            HouseName = "House 7",
                            Information = "Information for House 7",
                            LandLordId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2239),
                            PowerPrice = 98f,
                            Village = "Village 7",
                            WaterPrice = 47f
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            AddressId = new Guid("88888888-8888-8888-8888-888888888888"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2242),
                            HouseName = "House 8",
                            Information = "Information for House 8",
                            LandLordId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2242),
                            PowerPrice = 103f,
                            Village = "Village 8",
                            WaterPrice = 51f
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            AddressId = new Guid("99999999-9999-9999-9999-999999999999"),
                            CampusId = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2245),
                            HouseName = "House 9",
                            Information = "Information for House 9",
                            LandLordId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2246),
                            PowerPrice = 97f,
                            Village = "Village 9",
                            WaterPrice = 49f
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            AddressId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2249),
                            HouseName = "House 10",
                            Information = "Information for House 10",
                            LandLordId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2249),
                            PowerPrice = 105f,
                            Village = "Village 10",
                            WaterPrice = 55f
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            AddressId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2278),
                            HouseName = "House 11",
                            Information = "Information for House 11",
                            LandLordId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2278),
                            PowerPrice = 103f,
                            Village = "Village 11",
                            WaterPrice = 53f
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            AddressId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2281),
                            HouseName = "House 12",
                            Information = "Information for House 12",
                            LandLordId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2282),
                            PowerPrice = 98f,
                            Village = "Village 12",
                            WaterPrice = 48f
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            AddressId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2285),
                            HouseName = "House 13",
                            Information = "Information for House 13",
                            LandLordId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2285),
                            PowerPrice = 96f,
                            Village = "Village 13",
                            WaterPrice = 46f
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            AddressId = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            CampusId = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2288),
                            HouseName = "House 14",
                            Information = "Information for House 14",
                            LandLordId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2289),
                            PowerPrice = 99f,
                            Village = "Village 14",
                            WaterPrice = 49f
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            AddressId = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            CampusId = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2292),
                            HouseName = "House 15",
                            Information = "Information for House 15",
                            LandLordId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2292),
                            PowerPrice = 101f,
                            Village = "Village 15",
                            WaterPrice = 51f
                        });
                });

            modelBuilder.Entity("DataLayer.Models.HouseImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HouseId");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("HouseImages");
                });

            modelBuilder.Entity("DataLayer.Models.Rate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Star")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HouseId");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("DataLayer.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CurrentAmountOfPeople")
                        .HasColumnType("int");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("HouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxAmountOfPeople")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HouseId");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Area = "100 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2314),
                            CurrentAmountOfPeople = 1,
                            FloorNumber = 1,
                            HouseId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Information = "Information for Room 1",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2314),
                            MaxAmountOfPeople = 2,
                            Price = 100f,
                            RoomName = "Room 1",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Area = "110 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2318),
                            CurrentAmountOfPeople = 1,
                            FloorNumber = 2,
                            HouseId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Information = "Information for Room 2",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2318),
                            MaxAmountOfPeople = 3,
                            Price = 120f,
                            RoomName = "Room 2",
                            Status = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Area = "95 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2321),
                            CurrentAmountOfPeople = 1,
                            FloorNumber = 1,
                            HouseId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Information = "Information for Room 3",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2321),
                            MaxAmountOfPeople = 1,
                            Price = 90f,
                            RoomName = "Room 3",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Area = "105 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2325),
                            CurrentAmountOfPeople = 1,
                            FloorNumber = 2,
                            HouseId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Information = "Information for Room 4",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2326),
                            MaxAmountOfPeople = 2,
                            Price = 110f,
                            RoomName = "Room 4",
                            Status = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Area = "100 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2328),
                            CurrentAmountOfPeople = 2,
                            FloorNumber = 3,
                            HouseId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Information = "Information for Room 5",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2328),
                            MaxAmountOfPeople = 2,
                            Price = 105f,
                            RoomName = "Room 5",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            Area = "90 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2331),
                            CurrentAmountOfPeople = 1,
                            FloorNumber = 3,
                            HouseId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Information = "Information for Room 6",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2331),
                            MaxAmountOfPeople = 1,
                            Price = 95f,
                            RoomName = "Room 6",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            Area = "95 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2334),
                            CurrentAmountOfPeople = 2,
                            FloorNumber = 4,
                            HouseId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Information = "Information for Room 7",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2334),
                            MaxAmountOfPeople = 2,
                            Price = 98f,
                            RoomName = "Room 7",
                            Status = 0,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            Area = "100 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2337),
                            CurrentAmountOfPeople = 2,
                            FloorNumber = 4,
                            HouseId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Information = "Information for Room 8",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2337),
                            MaxAmountOfPeople = 2,
                            Price = 103f,
                            RoomName = "Room 8",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            Area = "95 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2340),
                            CurrentAmountOfPeople = 1,
                            FloorNumber = 5,
                            HouseId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Information = "Information for Room 9",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2340),
                            MaxAmountOfPeople = 1,
                            Price = 97f,
                            RoomName = "Room 9",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Area = "100 sq. ft.",
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2342),
                            CurrentAmountOfPeople = 2,
                            FloorNumber = 5,
                            HouseId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Information = "Information for Room 10",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2343),
                            MaxAmountOfPeople = 2,
                            Price = 105f,
                            RoomName = "Room 10",
                            Status = 0,
                            Type = 1
                        });
                });

            modelBuilder.Entity("DataLayer.Models.RoomHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomHistories");
                });

            modelBuilder.Entity("DataLayer.Models.RoomImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImages");
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Active = true,
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2182),
                            DisplayName = "staff",
                            Email = "staff@gmail.com",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2182),
                            Password = "123456",
                            PhoneNumber = "1234567890",
                            ProfileImageLink = "user1.jpg",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Active = true,
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2187),
                            DisplayName = "landlord1",
                            Email = "landlord1@gmail.com",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2187),
                            Password = "123456",
                            PhoneNumber = "9876543210",
                            ProfileImageLink = "user2.jpg",
                            Role = 0
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Active = true,
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2190),
                            DisplayName = "landlord2",
                            Email = "landlord2@gmail.com",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2190),
                            Password = "123456",
                            PhoneNumber = "9876543210",
                            ProfileImageLink = "user2.jpg",
                            Role = 0
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Active = true,
                            CreateDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2192),
                            DisplayName = "User 3",
                            Email = "admin@admin.com",
                            LastModifiedDate = new DateTime(2023, 11, 2, 10, 17, 29, 121, DateTimeKind.Utc).AddTicks(2193),
                            Password = "123456",
                            PhoneNumber = "5555555555",
                            ProfileImageLink = "user3.jpg",
                            Role = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DataLayer.Models.Campuses", b =>
                {
                    b.HasOne("DataLayer.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DataLayer.Models.House", b =>
                {
                    b.HasOne("DataLayer.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Campuses", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DataLayer.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("DataLayer.Models.User", "LandLordUser")
                        .WithMany()
                        .HasForeignKey("LandLordId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy");

                    b.Navigation("Address");

                    b.Navigation("Campus");

                    b.Navigation("CreatedByUser");

                    b.Navigation("LandLordUser");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("DataLayer.Models.HouseImage", b =>
                {
                    b.HasOne("DataLayer.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("DataLayer.Models.House", "House")
                        .WithMany("HouseImages")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("House");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("DataLayer.Models.Rate", b =>
                {
                    b.HasOne("DataLayer.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("DataLayer.Models.House", "House")
                        .WithMany("Rates")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("House");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("DataLayer.Models.Room", b =>
                {
                    b.HasOne("DataLayer.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("DataLayer.Models.House", "House")
                        .WithMany("Rooms")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("House");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("DataLayer.Models.RoomHistory", b =>
                {
                    b.HasOne("DataLayer.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("DataLayer.Models.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("DataLayer.Models.Room", "Room")
                        .WithMany("RoomHistories")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Customer");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DataLayer.Models.RoomImage", b =>
                {
                    b.HasOne("DataLayer.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("DataLayer.Models.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("DataLayer.Models.Room", "Room")
                        .WithMany("RoomImages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.HasOne("DataLayer.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.House", b =>
                {
                    b.Navigation("HouseImages");

                    b.Navigation("Rates");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("DataLayer.Models.Room", b =>
                {
                    b.Navigation("RoomHistories");

                    b.Navigation("RoomImages");
                });
#pragma warning restore 612, 618
        }
    }
}
